// Generated by Dagger (https://dagger.dev).
package com.android.fetchhiringtask.ui.viewmodels;

import com.android.fetchhiringtask.data.usecase.GetHiringDataUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class HiringViewModel_Factory implements Factory<HiringViewModel> {
  private final Provider<GetHiringDataUseCase> getHiringDataUseCaseProvider;

  public HiringViewModel_Factory(Provider<GetHiringDataUseCase> getHiringDataUseCaseProvider) {
    this.getHiringDataUseCaseProvider = getHiringDataUseCaseProvider;
  }

  @Override
  public HiringViewModel get() {
    return newInstance(getHiringDataUseCaseProvider.get());
  }

  public static HiringViewModel_Factory create(
      Provider<GetHiringDataUseCase> getHiringDataUseCaseProvider) {
    return new HiringViewModel_Factory(getHiringDataUseCaseProvider);
  }

  public static HiringViewModel newInstance(GetHiringDataUseCase getHiringDataUseCase) {
    return new HiringViewModel(getHiringDataUseCase);
  }
}
