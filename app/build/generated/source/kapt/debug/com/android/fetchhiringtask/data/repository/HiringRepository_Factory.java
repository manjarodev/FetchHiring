// Generated by Dagger (https://dagger.dev).
package com.android.fetchhiringtask.data.repository;

import com.android.fetchhiringtask.data.cloud.HiringRemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class HiringRepository_Factory implements Factory<HiringRepository> {
  private final Provider<HiringRemoteDataSource> hiringRemoteDataSourceProvider;

  public HiringRepository_Factory(Provider<HiringRemoteDataSource> hiringRemoteDataSourceProvider) {
    this.hiringRemoteDataSourceProvider = hiringRemoteDataSourceProvider;
  }

  @Override
  public HiringRepository get() {
    return newInstance(hiringRemoteDataSourceProvider.get());
  }

  public static HiringRepository_Factory create(
      Provider<HiringRemoteDataSource> hiringRemoteDataSourceProvider) {
    return new HiringRepository_Factory(hiringRemoteDataSourceProvider);
  }

  public static HiringRepository newInstance(HiringRemoteDataSource hiringRemoteDataSource) {
    return new HiringRepository(hiringRemoteDataSource);
  }
}
