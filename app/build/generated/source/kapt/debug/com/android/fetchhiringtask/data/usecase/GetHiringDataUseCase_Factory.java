// Generated by Dagger (https://dagger.dev).
package com.android.fetchhiringtask.data.usecase;

import com.android.fetchhiringtask.data.repository.HiringRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class GetHiringDataUseCase_Factory implements Factory<GetHiringDataUseCase> {
  private final Provider<HiringRepository> hiringRepositoryProvider;

  public GetHiringDataUseCase_Factory(Provider<HiringRepository> hiringRepositoryProvider) {
    this.hiringRepositoryProvider = hiringRepositoryProvider;
  }

  @Override
  public GetHiringDataUseCase get() {
    return newInstance(hiringRepositoryProvider.get());
  }

  public static GetHiringDataUseCase_Factory create(
      Provider<HiringRepository> hiringRepositoryProvider) {
    return new GetHiringDataUseCase_Factory(hiringRepositoryProvider);
  }

  public static GetHiringDataUseCase newInstance(HiringRepository hiringRepository) {
    return new GetHiringDataUseCase(hiringRepository);
  }
}
