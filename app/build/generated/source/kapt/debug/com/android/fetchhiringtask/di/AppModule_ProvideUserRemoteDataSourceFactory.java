// Generated by Dagger (https://dagger.dev).
package com.android.fetchhiringtask.di;

import com.android.fetchhiringtask.data.cloud.ApiService;
import com.android.fetchhiringtask.data.cloud.HiringRemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class AppModule_ProvideUserRemoteDataSourceFactory implements Factory<HiringRemoteDataSource> {
  private final Provider<ApiService> apiServiceProvider;

  public AppModule_ProvideUserRemoteDataSourceFactory(Provider<ApiService> apiServiceProvider) {
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public HiringRemoteDataSource get() {
    return provideUserRemoteDataSource(apiServiceProvider.get());
  }

  public static AppModule_ProvideUserRemoteDataSourceFactory create(
      Provider<ApiService> apiServiceProvider) {
    return new AppModule_ProvideUserRemoteDataSourceFactory(apiServiceProvider);
  }

  public static HiringRemoteDataSource provideUserRemoteDataSource(ApiService apiService) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideUserRemoteDataSource(apiService));
  }
}
